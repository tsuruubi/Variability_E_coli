# load("./MicroarrayProbe.RData")
# save.image("./MicroarrayProbe.RData")
library(viridis)
library(ggplot2)
library(GGally)
library(scales)
library(ggpubr)
library(grid)
library(gtable)
library(gridExtra)
library(dplyr)
library(matrixStats)
library(preprocessCore)
library(RColorBrewer)
library(openxlsx)
library(ggsci)
library(cowplot)
library(corrplot)
library(Hmisc)
# https://stackoverflow.com/questions/59419647/hmisc-package-or-namespace-failed-to-load-no-package-called-latticeextra
library(corrplot)
library(tidyverse)
library(magrittr)
library(dendextend)
library(FactoMineR)
library(factoextra)
library(proxy)
library(rstatix)
# library(plot3D)
library(clusterProfiler)
library(pathview)
library(org.EcK12.eg.db)
library(rvest)
library(corrr)
library(GOSemSim)
library(rrvgo)
library(qdapTools)
library(AnnotationDbi)
library(ggVennDiagram)
library(rJava)
library(venneuler)
library(igraph)
library(tidygraph)
library(recoRdseq) # for Record-seq
library(patchwork) # for Record-seq
library(Biostrings)
# library(BSgenome)
# library(BSgenome.Ecoli.NCBI.20080805)
# library(biomaRt)
# library(biomartr)
qw <- function(...) {
sapply(match.call()[-1], deparse)
}
createEmptyDf = function( nrow, ncol, colnames = c() ){
data.frame( matrix( vector(), nrow, ncol, dimnames = list( c(), colnames ) ) )
}
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
pValue_sp_text=function(dtf){
pcor_sp<-cor.test(x=dtf[,1],y=dtf[,2],method="spearman")
rho_sp<-round(pcor_sp$estimate,digits = 2)
pv_sp<-ifelse(pcor_sp$p.value<0.05," P<0.05",paste(" P==",round(pcor_sp$p.value,digits = 1),sep = ""))
rhopvtxt_sp<-paste("list(italic(rho)==", rho_sp,", ",pv_sp,")")
return(rhopvtxt_sp)
}
pValue_pr_text=function(dtf){
pcor_pr<-cor.test(x=dtf[,1],y=dtf[,2],method="pearson")
r_pr<-round(pcor_pr$estimate,digits = 2)
pv_pr<-ifelse(pcor_pr$p.value<0.05," P<0.05",paste(" P==",round(pcor_pr$p.value,digits = 1),sep = ""))
rpvtxt_pr<-paste("list(italic(r)==", r_pr,", ",pv_pr,")")
return(rpvtxt_pr)
}
mycolpal<-get_palette("lancet",9)
mycolpal.BuRd<-c(get_palette(palette = "Blues", 4)[2:4],get_palette(palette = "Reds", 4)[2:4])
mds42_ftr<-read_delim("AP012306.gff3",skip=2)
colnames(mds42_ftr)<-qw(ACCID,DB,Feature,Start,End,misc1,Strand,misc2,Notes)
View(mds42_ftr)
mds42_ftr<-read_delim("AP012306.gff3",skip=2)
colnames(mds42_ftr)<-qw(ACCID,DB,Feature,Start,End,misc1,Strand,misc2,Notes)
mds42_ftr$gene_synonym<-str_remove(str_extract(mds42_ftr$Notes,"gene_synonym=(.*?)(;|$)"),"gene_synonym=")
mds42_ftr$gene_synonym<-str_remove(mds42_ftr$gene_synonym,";")
mds42_ftr$locus_tag<-str_remove(str_extract(mds42_ftr$Notes,"locus_tag=(.*?)(;|$)"),"locus_tag=")
mds42_ftr$locus_tag<-str_remove(mds42_ftr$locus_tag,";")
mds42_ftr$GeneID<-str_remove(str_extract(mds42_ftr$Notes,"GeneID\\:(.*?)(;|$)"),"GeneID\\:")
mds42_ftr$GeneID<-str_remove(mds42_ftr$GeneID,";")
mds42_ftr$Parent<-str_remove(str_extract(mds42_ftr$Notes,"Parent=(.*?)(;|$)"),"Parent=")
mds42_ftr$Parent<-str_remove(mds42_ftr$Parent,";")
mds42_ftr$ID<-str_remove(str_extract(mds42_ftr$Notes,"ID=(.*?)(;|$)"),"ID=")
mds42_ftr$ID<-str_remove(mds42_ftr$ID,";")
mds42_ftr$gbkey<-str_remove(str_extract(mds42_ftr$Notes,"gbkey=(.*?)(;|$)"),"gbkey=")
mds42_ftr$gbkey<-str_remove(mds42_ftr$gbkey,";")
mds42_ftr$gene_biotype<-str_remove(str_extract(mds42_ftr$Notes,"gene_biotype=(.*?)(;|$)"),"gene_biotype=")
mds42_ftr$gene_biotype<-str_remove(mds42_ftr$gene_biotype,";")
mds42_ftr$gene<-str_remove(str_extract(mds42_ftr$Notes,"gene=(.*?)(;|$)"),"gene=")
mds42_ftr$gene<-str_remove(mds42_ftr$gene,";")
mds42_ftr$product<-str_remove(str_extract(mds42_ftr$Notes,"product=(.*?)(;|$)"),"product=")
mds42_ftr$product<-str_remove(mds42_ftr$product,";")
mds42_ftr2<-mds42_ftr[mds42_ftr$Feature=="gene",]
temp<-mds42_ftr[(!is.na(mds42_ftr$product))&(!is.na(mds42_ftr$Parent)),]
temp<-temp %>% distinct(Parent,.keep_all = T)
for(i in 1:nrow(mds42_ftr2)){
mds42_ftr2$product[i]<-temp[temp$Parent==mds42_ftr2$ID[i],]$product
}
View(mds42_ftr2)
mds42_ftr2$ID[i]
temp1<-temp[temp$Parent==mds42_ftr2$ID[i],]$product
temp1
!is.na(temp1)
length(temp1)
mds42_ftr<-read_delim("AP012306.gff3",skip=2)
colnames(mds42_ftr)<-qw(ACCID,DB,Feature,Start,End,misc1,Strand,misc2,Notes)
mds42_ftr$gene_synonym<-str_remove(str_extract(mds42_ftr$Notes,"gene_synonym=(.*?)(;|$)"),"gene_synonym=")
mds42_ftr$gene_synonym<-str_remove(mds42_ftr$gene_synonym,";")
mds42_ftr$locus_tag<-str_remove(str_extract(mds42_ftr$Notes,"locus_tag=(.*?)(;|$)"),"locus_tag=")
mds42_ftr$locus_tag<-str_remove(mds42_ftr$locus_tag,";")
mds42_ftr$GeneID<-str_remove(str_extract(mds42_ftr$Notes,"GeneID\\:(.*?)(;|$)"),"GeneID\\:")
mds42_ftr$GeneID<-str_remove(mds42_ftr$GeneID,";")
mds42_ftr$Parent<-str_remove(str_extract(mds42_ftr$Notes,"Parent=(.*?)(;|$)"),"Parent=")
mds42_ftr$Parent<-str_remove(mds42_ftr$Parent,";")
mds42_ftr$ID<-str_remove(str_extract(mds42_ftr$Notes,"ID=(.*?)(;|$)"),"ID=")
mds42_ftr$ID<-str_remove(mds42_ftr$ID,";")
mds42_ftr$gbkey<-str_remove(str_extract(mds42_ftr$Notes,"gbkey=(.*?)(;|$)"),"gbkey=")
mds42_ftr$gbkey<-str_remove(mds42_ftr$gbkey,";")
mds42_ftr$gene_biotype<-str_remove(str_extract(mds42_ftr$Notes,"gene_biotype=(.*?)(;|$)"),"gene_biotype=")
mds42_ftr$gene_biotype<-str_remove(mds42_ftr$gene_biotype,";")
mds42_ftr$gene<-str_remove(str_extract(mds42_ftr$Notes,"gene=(.*?)(;|$)"),"gene=")
mds42_ftr$gene<-str_remove(mds42_ftr$gene,";")
mds42_ftr$product<-str_remove(str_extract(mds42_ftr$Notes,"product=(.*?)(;|$)"),"product=")
mds42_ftr$product<-str_remove(mds42_ftr$product,";")
mds42_ftr2<-mds42_ftr[mds42_ftr$Feature=="gene",]
temp<-mds42_ftr[(!is.na(mds42_ftr$product))&(!is.na(mds42_ftr$Parent)),]
temp<-temp %>% distinct(Parent,.keep_all = T)
for(i in 1:nrow(mds42_ftr2)){
temp1<-temp[temp$Parent==mds42_ftr2$ID[i],]$product
if(length(temp1)==1)
mds42_ftr2$product[i]<-temp1
}
mds42_ftr2$ECKnb<-str_remove(str_extract(mds42_ftr2$gene_synonym,"ECK([0-9]*)(,|$)"),",")
write.csv(mds42_ftr2,"mds42_gnftr.csv") #<--------------------------------------------------------------------- OUTPUT
mds42_ftr$locus_tag<-str_remove(str_extract(mds42_ftr2$gene_synonym,"b([0-9]*)(,|$)"),",")
mds42_ftr2$gene_synonym,"b([0-9]*)(,|$)")
mds42_ftr<-read_delim("AP012306.gff3",skip=2)
colnames(mds42_ftr)<-qw(ACCID,DB,Feature,Start,End,misc1,Strand,misc2,Notes)
mds42_ftr$gene_synonym<-str_remove(str_extract(mds42_ftr$Notes,"gene_synonym=(.*?)(;|$)"),"gene_synonym=")
mds42_ftr$gene_synonym<-str_remove(mds42_ftr$gene_synonym,";")
mds42_ftr$locus_tag<-str_extract(mds42_ftr2$gene_synonym,"b([0-9]*)")
mds42_ftr<-read_delim("AP012306.gff3",skip=2)
colnames(mds42_ftr)<-qw(ACCID,DB,Feature,Start,End,misc1,Strand,misc2,Notes)
mds42_ftr$gene_synonym<-str_remove(str_extract(mds42_ftr$Notes,"gene_synonym=(.*?)(;|$)"),"gene_synonym=")
mds42_ftr$gene_synonym<-str_remove(mds42_ftr$gene_synonym,";")
mds42_ftr$locus_tag<-str_extract(mds42_ftr$gene_synonym,"b([0-9]*)")
# mds42_ftr$locus_tag<-str_remove(mds42_ftr$locus_tag,";")
mds42_ftr$GeneID<-str_remove(str_extract(mds42_ftr$Notes,"GeneID\\:(.*?)(;|$)"),"GeneID\\:")
mds42_ftr$GeneID<-str_remove(mds42_ftr$GeneID,";")
mds42_ftr$Parent<-str_remove(str_extract(mds42_ftr$Notes,"Parent=(.*?)(;|$)"),"Parent=")
mds42_ftr$Parent<-str_remove(mds42_ftr$Parent,";")
mds42_ftr$ID<-str_remove(str_extract(mds42_ftr$Notes,"ID=(.*?)(;|$)"),"ID=")
mds42_ftr$ID<-str_remove(mds42_ftr$ID,";")
mds42_ftr$gbkey<-str_remove(str_extract(mds42_ftr$Notes,"gbkey=(.*?)(;|$)"),"gbkey=")
mds42_ftr$gbkey<-str_remove(mds42_ftr$gbkey,";")
mds42_ftr$gene_biotype<-str_remove(str_extract(mds42_ftr$Notes,"gene_biotype=(.*?)(;|$)"),"gene_biotype=")
mds42_ftr$gene_biotype<-str_remove(mds42_ftr$gene_biotype,";")
mds42_ftr$gene<-str_remove(str_extract(mds42_ftr$Notes,"gene=(.*?)(;|$)"),"gene=")
mds42_ftr$gene<-str_remove(mds42_ftr$gene,";")
mds42_ftr$product<-str_remove(str_extract(mds42_ftr$Notes,"product=(.*?)(;|$)"),"product=")
mds42_ftr$product<-str_remove(mds42_ftr$product,";")
mds42_ftr2<-mds42_ftr[mds42_ftr$Feature=="gene",]
temp<-mds42_ftr[(!is.na(mds42_ftr$product))&(!is.na(mds42_ftr$Parent)),]
temp<-temp %>% distinct(Parent,.keep_all = T)
for(i in 1:nrow(mds42_ftr2)){
temp1<-temp[temp$Parent==mds42_ftr2$ID[i],]$product
if(length(temp1)==1)
mds42_ftr2$product[i]<-temp1
}
mds42_ftr2$ECKnb<-str_remove(str_extract(mds42_ftr2$gene_synonym,"ECK([0-9]*)(,|$)"),",")
write.csv(mds42_ftr2,"mds42_gnftr.csv") #<--------------------------------------------------------------------- OUTPUT
